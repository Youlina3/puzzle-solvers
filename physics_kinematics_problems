#!/usr/bin/env python

from __future__ import print_function
from z3 import *

def print_solution(s, problem):
  print("Problem %s" % problem)
  if s.check() == sat:
    print(s.model())
  else:
    print("No solution")

def problem_01():
  """
  An airplane accelerates down a runway at 3.20 m/s2 for 32.8 s until is finally lifts off the ground.
  Determine the distance traveled before takeoff.
  """
  s = Solver()
  a = Real("a")
  t = Real("t")
  d = Real("d")

  s.add(a == 3.20)
  s.add(t == 32.8)
  s.add(d == a*t*t/2)

  print_solution(s, "01")

def problem_02():
  """
  A car starts from rest and accelerates uniformly over a time of 5.21 seconds for a distance of 110 m. Determine the acceleration of the car.
  """
  s = Solver()
  a = Real("a")
  t = Real("t")
  d = Real("d")

  s.add(d == a*t*t/2)
  s.add(t == 5.21)
  s.add(d == 110)

  print_solution(s, "02")

def problem_03():
  """
  Upton Chuck is riding the Giant Drop at Great America.
  If Upton free falls for 2.60 seconds, what will be his final velocity and how far will he fall?
  """
  s = Solver()
  a = Real("a")
  t = Real("t")
  v = Real("v")
  d = Real("d")

  s.add(a == 9.81)
  s.add(d == a*t*t/2)
  s.add(v == a*t)
  s.add(t == 2.60)

  print_solution(s, "03")

def problem_04():
  """
  A race car accelerates uniformly from 18.5 m/s to 46.1 m/s in 2.47 seconds. Determine the acceleration of the car and the distance traveled.
  """
  s = Solver()
  a = Real("a")
  t = Real("t")
  vs= Real("vs")
  ve = Real("ve")
  d = Real("d")

  s.add(vs == 18.5)
  s.add(ve == 46.1)
  s.add(t == 2.47)
  s.add(a == (ve-vs)/t)
  s.add(d == (vs+ve)/2*t)

  print_solution(s, "04")

def problem_05():
  """
  A feather is dropped on the moon from a height of 1.40 meters.
  The acceleration of gravity on the moon is 1.67 m/s2.
  Determine the time for the feather to fall to the surface of the moon.
  """
  s = Solver()
  a = Real("a")
  t = Real("t")
  d = Real("d")

  s.add(a == 1.67)
  s.add(d == 1.40)
  s.add(t >= 0)
  s.add(d == a*t*t/2)

  print_solution(s, "05")

def problem_06():
  """
  Rocket-powered sleds are used to test the human response to acceleration.
  If a rocket-powered sled is accelerated to a speed of 444 m/s in 1.83 seconds,
  then what is the acceleration and what is the distance that the sled travels?
  """

  s = Solver()
  a = Real("a")
  t = Real("t")
  d = Real("d")
  v = Real("v")

  s.add(v == 444)
  s.add(t == 1.83)
  s.add(v == a*t)
  s.add(d == a*t*t/2)

  print_solution(s, "06")

def problem_07():
  """
  A bike accelerates uniformly from rest to a speed of 7.10 m/s over a distance of 35.4 m.
  Determine the acceleration of the bike.
  """

  s = Solver()
  a = Real("a")
  t = Real("t")
  d = Real("d")
  v = Real("v")

  s.add(v == 7.10)
  s.add(d == 35.4)
  s.add(a*t == v)
  s.add(t*v/2 == d)

  print_solution(s, "07")

def problem_08():
  """
  An engineer is designing the runway for an airport.
  Of the planes that will use the airport, the lowest acceleration rate is likely to be 3 m/s2.
  The takeoff speed for this plane will be 65 m/s.
  Assuming this minimum acceleration, what is the minimum allowed length for the runway?
  """

  s = Solver()
  a = Real("a")
  t = Real("t")
  d = Real("d")
  v = Real("v")

  s.add(a == 3)
  s.add(v == 65)
  s.add(a*t == v)
  s.add(t*v/2 == d)

  print_solution(s, "08")


set_option(rational_to_decimal=True)
for p in dir():
  if p.startswith("problem_"):
    globals()[p]()

"""
http://www.physicsclassroom.com/class/1DKin/Lesson-6/Sample-Problems-and-Solutions
"""
